import serial
import sys
import time
import string

MODEL           = raw_input('f60 or f30: ')
MODE            = raw_input('Mode is (L3 or L2): ')
Host            = raw_input('Hostname is: ')
dev             = "/dev/ttyUSB0"
br              = 9600

def label(genre):
    print '='*25
    print genre
    print '='*25

if MODE == "L3":
    L3IP        = raw_input('L3IP: ')
    L3Subnet    = raw_input('L3Subnet: ')
    L3VIP       = raw_input('L3VIP: ')
    local_IP    = raw_input('internal_IP: ')
    local_Subnet= raw_input('internal_Subnet: ')
elif MODE == "L2":
    L2IP   = raw_input('IPADDRESS: ')
    L2NETMASK     = raw_input('NETMASK: ')
    L2GATEWAY     = raw_input('GATEWAY: ')
ser = serial.Serial(dev, br, timeout=2, parity=serial.PARITY_NONE, bytesize=serial.EIGHTBITS, stopbits=serial.STOPBITS_ONE, xonxoff=False)
print ser.name + ' login'
if not ser.isOpen():
    sys.exit()
    print 'Login Failer'
ser.flushInput()
input_data = ser.read(ser.inWaiting())
ser.write("admin\n".encode())
time.sleep(1)
ser.write("\n".encode())
time.sleep(3)

label('Starting Setting for ')
ser.write('config firewall policy\n'.encode())
ser.write('delete 1\n'.encode())
ser.write('end\n'.encode())
time.sleep(1.5)
ser.write('config system dhcp server\n'.encode())
ser.write('delete 1\n'.encode())
ser.write('end\n'.encode())
time.sleep(1.5)
bytes_to_read0 = ser.inWaiting()
data0 = ser.read(bytes_to_read0).decode()
print (data0)


label('NETWORK setting')
if MODEL == "f60":
    ser.write('\n'.encode())
    if MODE == "L3":
        time.sleep(1)
        ser.write('config system settings\n'.encode())
        ser.write('set opmode nat\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('config system interface\n'.encode())
        ser.write('edit "wan1"\n'.encode())
        ser.write('set mode static\n'.encode())
        ser.write('set ip '+L3IP+' '+L3Subnet+'\n'.encode())
        ser.write('set allowaccess ping https ssh\n'.encode())
        ser.write('next\n'.encode())
        ser.write('edit "internal"\n'.encode())
        ser.write('set mode static\n'.encode())
        ser.write('set ip '+local_IP+' '+local_Subnet+'\n'.encode())
        ser.write('set allowaccess ping\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('config router static\n'.encode())
        ser.write('edit "1"\n'.encode())
        ser.write('set dst 0.0.0.0 0.0.0.0\n'.encode())
        ser.write('set gateway '+L3VIP+'\n'.encode())
        ser.write('set device wan1\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
    elif MODE == "L2":
        ser.write('config system interface\n'.encode())
        ser.write('edit "wan1"\n'.encode())
        ser.write('set allowaccess ping https ssh\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('config system settings\n'.encode())
        ser.write('set opmode transparent\n'.encode())
        ser.write('set manageip '+L2IP+'/'+L2NETMASK+'\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('y\n'.encode())
        time.sleep(22)
        ser.write('config router static\n'.encode())
        ser.write('edit "1"\n'.encode())
        ser.write('set gateway '+L2GATEWAY+'\n'.encode())
        ser.write('end\n'.encode())
elif MODEL == "f30":
    ser.write('config system interface\n'.encode())
    ser.write('edit "wan"\n'.encode())
    ser.write('set allowaccess ping https ssh\n'.encode())
    ser.write('end\n'.encode())
    if MODE == "L3":
        ser.write('config system interface\n'.encode())
        time.sleep(1)
        ser.write('edit "wan"\n'.encode())
        ser.write('set mode static\n'.encode())
        ser.write('set ip '+L3IP+' '+L3Subnet+' \n'.encode())
        ser.write('next\n'.encode())
        time.sleep(1.5)
        ser.write('edit "lan"\n'.encode())
        ser.write('set mode static\n'.encode())
        ser.write('set ip '+local_IP+' '+local_Subnet+' \n'.encode())
        ser.write('set allowaccess ping\n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('config router static\n'.encode())
        time.sleep(1)
        ser.write('edit "1" \n'.encode())
        ser.write('set dst 0.0.0.0 0.0.0.0\n'.encode())
        ser.write('set gateway '+L3VIP+' \n'.encode())
        ser.write('set device wan\n'.encode())
        ser.write('end\n'.encode())
    elif MODE == "L2":
        ser.write('config system settings\n'.encode())
        time.sleep(1)
        ser.write('set opmode transparent\n'.encode())
        ser.write('set manageip '+L2IP+'/'+L2NETMASK+' \n'.encode())
        ser.write('end\n'.encode())
        time.sleep(1)
        ser.write('y\n'.encode())
        time.sleep(7)
        ser.write('config router static\n'.encode())
        time.sleep(2)
        ser.write('edit 1\n'.encode())
        ser.write('set gateway '+L2GATEWAY+'\n'.encode())
        ser.write('end\n'.encode())
ser.write('end\n'.encode())
bytes_to_read1 = ser.inWaiting()
data1 = ser.read(bytes_to_read1).decode()
print (data1)
time.sleep(1)

label('DNS setting')
ser.write('config system dns\n'.encode())
ser.write('set primary 8.8.8.8\n'.encode())
ser.write('set secondary 9.9.9.9\n'.encode())
ser.write('end\n'.encode())
time.sleep(1)
bytes_to_read2 = ser.inWaiting()
data2 = ser.read(bytes_to_read2).decode()
print (data2)

label('NTP Setting')
ser.write('config system ntp\n'.encode())
time.sleep(1)
ser.write('set ntpsync enable\n'.encode())
ser.write('set type custom\n'.encode())
ser.write('set syncinterval 60\n'.encode())
time.sleep(1.5)
ser.write('config ntpserver\n'.encode())
ser.write('edit 1\n'.encode())
time.sleep(1)
ser.write('set server "ntp1.jst.mfeed.ad.jp"\n'.encode())
ser.write('end\n'.encode())
ser.write('end\n'.encode())
time.sleep(1)
bytes_to_read3 = ser.inWaiting()
data3 = ser.read(bytes_to_read3).decode()
print (data3)

label('My Firewall')
ser.write('config firewall address\n'.encode())
ser.write('edit "My_policy1"\n'.encode())
time.sleep(1)
ser.write('set type ipmask\n'.encode())
if MODEL == "f60":
    ser.write('set associated-interface "wan1"\n'.encode())
elif MODEL == "f30":
    ser.write('set associated-interface "wan"\n'.encode())
ser.write('set subnet xxx.xxx.xxx.xxx 255.255.255.255\n'.encode())
ser.write('next\n'.encode())
time.sleep(2)
ser.write('edit "My_policy2"\n'.encode())
time.sleep(1)
ser.write('set type ipmask\n'.encode())
if MODEL == "f60":
    ser.write('set associated-interface "wan1"\n'.encode())
elif MODEL == "f30":
    ser.write('set associated-interface "wan"\n'.encode())
ser.write('set subnet xxx.xxx.xxx.xxx 255.255.255.255\n'.encode())
ser.write('next\n'.encode())
time.sleep(2)
ser.write('edit "My_policy3"\n'.encode())
time.sleep(1)
ser.write('set type ipmask\n'.encode())
if MODEL == "f60":
    ser.write('set associated-interface "wan1"\n'.encode())
elif MODEL == "f30":
    ser.write('set associated-interface "wan"\n'.encode())
ser.write('set subnet xxx.xxx.xxx.xxx 255.255.255.255\n'.encode())
ser.write('next\n'.encode())
time.sleep(2)
ser.write('end\n'.encode())
time.sleep(1)
ser.write('config firewall addrgrp\n'.encode())
ser.write('edit "My_POLICY"\n'.encode())
ser.write('set member "My_policy1" "My_policy2" "My_policy3" \n'.encode())
ser.write('end\n'.encode())
time.sleep(2)
bytes_to_read4 = ser.inWaiting()
data4 = ser.read(bytes_to_read4).decode()
print (data4)
time.sleep(1)

label('Firewall default policy')
ser.write('config firewall policy\n'.encode())
ser.write('edit "1"\n'.encode())
time.sleep(1.5)
if MODEL == "f60":
    ser.write('set srcintf "wan1"\n'.encode())
    time.sleep(1)
    if MODE == "L3":
        ser.write('set dstintf "internal"\n'.encode())
    elif MODE == "L2":
        ser.write('set dstintf "internal"\n'.encode())
elif MODEL == "f30":
    ser.write('set srcintf "wan"\n'.encode())
    time.sleep(1)
    ser.write('set dstintf "lan"\n'.encode())
ser.write('set srcaddr "My_POLICY"\n'.encode())
ser.write('set dstaddr "all"\n'.encode())
ser.write('set action accept\n'.encode())
ser.write('set schedule "always"\n'.encode())
ser.write('set service "ALL"\n'.encode())
ser.write('set logtraffic disable\n'.encode())
ser.write('set comments "My_POLICY"\n'.encode())
ser.write('next\n'.encode())
time.sleep(2)
ser.write('edit "2"\n'.encode())
time.sleep(1.5)
if MODEL == "f60":
    if MODE == "L3":
        ser.write('set srcintf "internal"\n'.encode())
    elif MODE == "L2":
        ser.write('set srcintf "internal"\n'.encode())
    time.sleep(1)
    ser.write('set dstintf "wan1"\n'.encode())
elif MODEL == "f30":
    ser.write('set srcintf "lan"\n'.encode())
    time.sleep(1)
    ser.write('set dstintf "wan"\n'.encode())
ser.write('set srcaddr "all"\n'.encode())
ser.write('set dstaddr "all"\n'.encode())
ser.write('set action accept\n'.encode())
ser.write('set schedule "always"\n'.encode())
ser.write('set service "ALL"\n'.encode())
time.sleep(1)
ser.write('end\n'.encode())
bytes_to_read5 = ser.inWaiting()
data5 = ser.read(bytes_to_read5).decode()
print (data5)
time.sleep(1.5)

label('global setting')
if MODEL == "f60":
    ser.write('config system global\n'.encode())
    ser.write('set gui-multiple-utm-profiles enable\n'.encode())
    ser.write('end\n'.encode())
ser.write('config firewall service custom\n'.encode())
ser.write('edit "Submission"\n'.encode())
time.sleep(1)
ser.write('set category "Email"\n'.encode())
ser.write('set tcp-portrange 587\n'.encode())
ser.write('end\n'.encode())
time.sleep(1)
ser.write('config system global\n'.encode())
ser.write('set language japanese\n'.encode())
ser.write('set admintimeout 60\n'.encode())
ser.write('set timezone 60\n'.encode())
ser.write('set hostname '+Host+'\n'.encode())
time.sleep(1)
ser.write('end\n'.encode())
time.sleep(1)
bytes_to_read6 = ser.inWaiting()
data6 = ser.read(bytes_to_read6).decode()
print (data6)
time.sleep(1)

ser.write('exit')
ser.close()
exit()
